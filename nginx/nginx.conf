upstream api {
  # Could be host.docker.internal - Docker for Mac/Windows - the host itself
  # Could be your API in a appropriate domain
  # Could be other container in the same network, like container_name:port
  server greenshop-dev-spring-1:8080;
}

server {
  listen 80;
  server_name localhost;

  location /api/ {

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Max-Age' 1728000 always;
      add_header 'Access-Control-Allow-Origin' $http_origin always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,
      X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range' always;
      add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
	  add_header 'Access-Control-Allow-Credentials' 'true' always;
      #add_header 'Content-Type' 'application/json';
      #add_header 'Content-Length' 0;
      return 204;
    }

    add_header 'Access-Control-Allow-Origin' $http_origin;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,
    X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
	add_header X-Frame-Options SAMEORIGIN;

	#proxy_set_header Host $host;
	
    proxy_pass http://api;
	
	proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Adjust buffering settings as needed
    proxy_buffering off;
    # Add other buffering related directives if necessary

    # Ensure response headers are passed to the client
    proxy_pass_header Content-Length;
    proxy_pass_header Content-Type;
	
  }
}