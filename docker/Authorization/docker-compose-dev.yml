version: '3'

services:
    prometheus:
        image: prom/prometheus:v2.44.0
        container_name: prometheus
        ports:
          - "9090:9090"
        volumes:
          - ../../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

    grafana:
        image: grafana/grafana:9.5.2
        container_name: grafana
        ports:
          - "3000:3000"
        restart: unless-stopped
        volumes:
          - ../../grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  service:
    build:
        context: ../../service/Authorization/service
        dockerfile: ./dev.Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      
  db:
    build:
        context: ../../service/Authorization/db
        dockerfile: ./dev.Dockerfile
    command: --mysql-native-password=ON
    restart: always
    ports:
      - "3306:3306"
    environment:
        MYSQL_ROOT_HOST: localhost
        MYSQL_ROOT_PASSWORD: admin
        MYSQL_DATABASE: db
        MYSQL_ADMIN: admin
        MYSQL_ADMIN_PASSWORD: admin
        MYSQL_PUBLIC_USER: public
        MYSQL_FLYWAY_USER: flyway
        MYSQL_FLYWAY_PASSWORD: flyway
    volumes:
      - db-dev:/var/lib/mysql
    deploy:
        resources:
            limits:
                cpus: 1 # Limit to 4 CPUs
                memory: 600M # Limit to 600MiB of memory
  db-backup:
    build:
        context: ../../service/Authorization/db
        dockerfile: ./mysql-backup.Dockerfile
    ports:
      - "3307:3307"
    volumes:
      - db-dev:/var/lib/mysql
    depends_on:
      - db
      
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minioaccesskey
      MINIO_SECRET_KEY: miniosecretkey
    volumes:
      - minio-dev:/data
    command: ["server", "--console-address", ":9001", "/data"]

volumes:
  db-dev:
  minio-dev: 